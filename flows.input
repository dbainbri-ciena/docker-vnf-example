# For now, just kill IPv6
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,ipv6,actions=drop

# Prevent subscriber b's stuff from talking to subscriber A
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(egress_vnf_b_subscriber_b,in0),dl_dst={subscriber_a,eth0},actions=drop
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(egress_vnf_b_subscriber_b,out0),dl_dst={subscriber_a,eth0},actions=drop
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(udp_service_subscriber_b,eth0),dl_dst={subscriber_a,eth0},actions=drop

# Prevent subscriber a's stuff from talking to subscriber B
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(egress_vnf_b_subscriber_a,in0),dl_dst={subscriber_b,eth0},actions=drop
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(egress_vnf_b_subscriber_a,out0),dl_dst={subscriber_b,eth0},actions=drop
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(udp_service_subscriber_a,eth0),dl_dst={subscriber_b,eth0},actions=drop

# subscriber -> egress vNF A, subscriber specific
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(subscriber_a,eth0),actions=output:(egress_vnf_a,in0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(subscriber_b,eth0),actions=output:(egress_vnf_a,in0)

# egress vNF A to egress vNF B, subscriber specific
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(egress_vnf_a,out0),dl_src={subscriber_a,eth0},actions=output:(egress_vnf_b_subscriber_a,in0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(egress_vnf_a,out0),dl_src={subscriber_b,eth0},actions=output:(egress_vnf_b_subscriber_b,in0)

# egress vNF B to egress vNF C, subscriber specific
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(egress_vnf_b_subscriber_a,out0),actions=output:(egress_vnf_c,in0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(egress_vnf_b_subscriber_b,out0),actions=output:(egress_vnf_c,in0)

# egress vNF C to tenant network and Internet
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(egress_vnf_c,out0),actions=goto_table:10

# Sample UDP service to ingress vNF A, subscriber specific
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(udp_service_subscriber_a,eth0),actions=output:(ingress_vnf_a,in0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(udp_service_subscriber_b,eth0),actions=output:(ingress_vnf_a,in0)

# Sample TCP service to ingress vNF A
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(tcp_service,eth0),actions=output:(ingress_vnf_a,in0)

# Internet to ingress vNF A
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(uplink,up0),actions=output:(ingress_vnf_a,in0)

# ingress vNF A to a random instance of ingress vNF B
sudo ovs-ofctl add-group -OOpenFlow13 chain group_id=1234,type=select,bucket=output:(ingress_vnf_b_instance_1,in0),bucket=output:(ingress_vnf_b_instance_2,in0),bucket=output:(ingress_vnf_b_instance_3,in0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(ingress_vnf_a,out0),actions=group:1234

# ingress vNF B to subscriber, subscriber specific
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(ingress_vnf_b_instance_1,out0),dl_dst={subscriber_a,eth0},actions=output:(subscriber_a,eth0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(ingress_vnf_b_instance_2,out0),dl_dst={subscriber_a,eth0},actions=output:(subscriber_a,eth0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(ingress_vnf_b_instance_3,out0),dl_dst={subscriber_a,eth0},actions=output:(subscriber_a,eth0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(ingress_vnf_b_instance_1,out0),dl_dst={subscriber_b,eth0},actions=output:(subscriber_b,eth0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(ingress_vnf_b_instance_2,out0),dl_dst={subscriber_b,eth0},actions=output:(subscriber_b,eth0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=0,in_port=(ingress_vnf_b_instance_3,out0),dl_dst={subscriber_b,eth0},actions=output:(subscriber_b,eth0)

# On egress of vNF C, match on DST IP to service vNF or distribute everywhere
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=10,dl_src={subscriber_a,eth0},ip,nw_dst=10.1.0.3,actions=output:(udp_service_subscriber_a,eth0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=10,dl_src={subscriber_b,eth0},ip,nw_dst=10.1.0.3,actions=output:(udp_service_subscriber_b,eth0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=10,ip,nw_dst=10.1.0.4,actions=output:(tcp_service,eth0)

# Subscriber isolation coming out of vNF-C
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=10,dl_src={subscriber_a,eth0},actions=output:(udp_service_subscriber_a,eth0),output:(tcp_service,eth0),output:(uplink,up0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=10,dl_src={subscriber_b,eth0},actions=output:(udp_service_subscriber_b,eth0),output:(tcp_service,eth0),output:(uplink,up0)
sudo ovs-ofctl add-flow -OOpenFlow13 chain table=10,priority=0,actions=drop
